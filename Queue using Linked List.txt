#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node*next;
};
typedef struct node Node;
Node*head=NULL;
Node*front=NULL;
Node*rear=NULL;
void enqueue()
{
    Node*temp;
    temp=(Node*)malloc(sizeof(Node));
    scanf("%d",&temp->data);
    temp->next=NULL;
    if(temp==NULL)
    {
        printf("queue full");
        exit(0);
    }
    if(head==NULL)
    head=front=rear=temp;
    else
    {
        Node*p=head;
        while(p->next!=NULL)
        p=p->next;
        p->next=temp;
        rear=temp;
    }
}
void dequeue()
{
    if(head==NULL)
    {
        printf("queue empty");
        exit(0);
    }
    else
    {
        Node*p=head;
        head=head->next;
        front=head;
        p->next=NULL;
        printf("deleted element=%d\n",p->data);
        free(p);
    }
    
}
void display()
{
    Node*p=head;
    while(p!=NULL)
    {
        printf("%d\n",p->data);
        p=p->next;
    }
}
int main()
{
    int choice;
    do{
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
            enqueue();
            break;
            case 2:
            dequeue();
            break;
            case 3:
            display();
            break;
            case 4:
            printf("exit");
            break;
            default:
            printf("invalid");
            break;
        }
    }
    while(choice!=4);
    return 0;
}