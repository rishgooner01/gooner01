#include<stdio.h>
#include<stdlib.h>
#define N 5
int stack1[N];
int stack2[N];
int top1=-1;
int top2=-1;

void push1(int x)
{
    if(top1==N-1)
    {
        printf("overflow");
        exit(0);
    }
    else
    {
        top1++;
        stack1[top1]=x;
    }
}
void push2(int x)
{
    if(top2==N-1)
    {
        printf("overflow");
        exit(0);
    }
    else
    {
        top2++;
        stack2[top2]=x;
    }
}
int pop1()
{
    int a;
    if(top1==-1)
    {
        printf("underflow");
        exit(0);
    }
    else
    {
        
        a=stack1[top1];
        top1--;
    }
    return a;
}
int pop2()
{
    int a;
    if(top2==1)
    {
        printf("underflow");
        exit(0);
    }
    else
    {
       
        a=stack2[top2];
        top2--;
    }
    return a;
}
void enqueue()
{
   
    int i;
    for(i=0;i<N;i++)
    {
        int x;
        scanf("%d",&x);
        push1(x);
    }
    
    for(i=0;i<N;i++)
    printf("%d\n",stack1[i]);
}
void dequeue()
{
    int i;
    for(i=0;i<N;i++)
    push2(pop1());
    int n;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        int y;
        y=pop2();
        printf("deleted element=%d\n",y);
    }
    for(i=top2;i>=0;i--)
    printf("%d\n",stack2[i]);
}
int main()
{
    int choice;
    do{
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
            enqueue();
            break;
            case 2:
            dequeue();
            break;
            case 3:
            printf("exit");
            break;
            default:
            printf("invalid");
            break;
        }
    }while(choice!=3);
    return 0;
}